<job id="ZTIListApplications">
   <script language="VBScript" src="ZTIUtility.vbs"/>
   <script language="VBScript" src="ZTIDataAccess.vbs"/>
   <script language="VBScript"> 

' //***************************************************************************
' // ***** Script Header *****
' //
' // Created:	 2015-12-15
' // Version:	 1.0
' // Author      Johan Arwidmark       
' // 
' // Disclaimer:
' // This script is provided "AS IS" with no warranties, confers no rights and 
' // is not supported by the authors or DeploymentArtist.
' // 
' // Author - Johan Arwidmark
' // Twitter: @jarwidmark
' // Blog   : http://deploymentresearch.com
' //
' // ***** End Header *****
' //*************************************************************************** 

ZTIProcess

Function ZTIProcess()

	Dim iRetVal
	Dim sCmd


	' Initialization

	iRetVal = Success
	oEnvironment.Item("DeploymentMethod") = "SCCM"
	
	'//----------------------------------------------------------------------------
	'//  Gather information
	'//----------------------------------------------------------------------------

	' Process MDT rules
	
	sCmd = "wscript.exe """ & oUtility.ScriptDir & "\ZTIGather.wsf"" "
    	iRetVal = RunAndLog(sCmd, true)
	
	oLogging.CreateEntry "MachineObjectOU is: " & oEnvironment.Item("MachineObjectOU"), LogTypeInfo
	oLogging.CreateEntry "FinalTargetOU is: " & oEnvironment.Item("FinalTargetOU"), LogTypeInfo


	' Run the Web Service
	MoveComputerToOU
	

End Function

Function MoveComputerToOU

	oLogging.CreateEntry "MoveComputerToOU", LogTypeInfo

	Dim oService
	Dim oXML
	Dim sRoleList

	' Create the web service instance

	Set oService = new WebService
	oService.IniFile = oEnvironment.Item("RulesFile")
	oService.SectionName = "MoveComputerToOU"

	' Call the web service

	Set oXML = oService.Query

	If oXML is Nothing then
		oLogging.CreateEntry "MoveComputerToOU: Unable to query web service.", LogTypeWarning
	Else
	
	End if

End Function

Function HTMLDecode(byVal encodedstring)

         Dim tmp, i
         tmp = encodedstring
         tmp = Replace( tmp, "&quot;", chr(34) )
         tmp = Replace( tmp, "&lt;"  , chr(60) )
         tmp = Replace( tmp, "&gt;"  , chr(62) )
         tmp = Replace( tmp, "&amp;" , chr(38) )
         tmp = Replace( tmp, "&nbsp;", chr(32) )
         For i = 1 to 255
                 tmp = Replace( tmp, "&#" & i & ";", chr( i ) )
         Next
         HTMLDecode = tmp
End Function

Function RunAndLog(sCmd, bDebuggable)

	Dim iRetVal
	Dim iShow


	If oLogging.Debug and bDebuggable then
		sCmd = sCmd & " /debug:true"
		iShow = 1
	Else
		iShow = 0
	End if


	oLogging.CreateEntry "About to run command: " & sCmd, LogTypeInfo

	On Error Resume Next
	iRetVal = oShell.Run(sCmd, iShow, true)
	If Err then
		iRetVal = Err.Number
		oLogging.CreateEntry "ERROR executing command " & sCmd & ": " & Err.Description & " (" & Err.Number & ")", LogTypeError
	ElseIf iRetVal = -2147021886 or iRetVal = 0 then
		oLogging.CreateEntry "Successfully executed command " & sCmd & ", rc = " & CStr(iRetVal), LogTypeInfo
	Else
		oLogging.CreateEntry "Non-zero return code executing command " & sCmd & ", rc = " & iRetVal, LogTypeWarning
	End if
	RunAndLog = iRetVal
	On Error Goto 0

End Function


   </script>
</job>
